#!/bin/bash

# Modern Colors
BLUE='\033[0;38;5;27m'
CYAN='\033[0;38;5;45m'
GREEN='\033[0;38;5;46m'
YELLOW='\033[0;38;5;226m'
RED='\033[0;38;5;196m'
PURPLE='\033[0;38;5;165m'
ORANGE='\033[0;38;5;208m'
NC='\033[0m' # No Color

# Get system information
OS_INFO=$(source /etc/os-release && echo "$PRETTY_NAME")
PUBLIC_IP=$(curl -s ifconfig.me)
CITY=$(curl -s ipinfo.io/$PUBLIC_IP | jq -r '.city // "Unknown"')
DOMAIN=$(hostname -d 2>/dev/null || echo "No domain")

# Text Gradient
gradient() {
    local text=$1
    local length=${#text}
    local output=""

    for (( i=0; i<length; i++ )); do
        char=${text:$i:1}
        color_code=$(( 27 + (i * 18 / length) ))
        output+="\033[38;5;${color_code}m${char}"
    done

    echo -ne "${output}${NC}"
}

# Check service status
check_service() {
    systemctl is-active accel-ppp &> /dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}● RUNNING${NC}"
    else
        echo -e "${RED}● STOPPED${NC}"
    fi
}

# Files
CHAP_FILE="/home/sstp/sstp_account"
EXPIRY_FILE="/home/sstp/account_expiry"
LOG_FILE="/var/log/vpn_users.log"

# Header with animation
display_header() {
    clear
    echo -e "${PURPLE}╔════════════════════════════════════════════════════════════════════╗"
    gradient "                H O K A G E   V P N   M A N A G E R  P R O               "
    echo -e "\n${PURPLE}╚════════════════════════════════════════════════════════════════════╝${NC}"
}

# Calculate expiry date
calculate_expiry() {
    local period=$1
    if [[ $period == *"day"* ]]; then
        days=${period%% *}
        date -d "+${days} days" +"%Y-%m-%d"
    elif [[ $period == *"month"* ]]; then
        months=${period%% *}
        date -d "+${months} months" +"%Y-%m-%d"
    elif [[ $period == *"year"* ]]; then
        years=${period%% *}
        date -d "+${years} years" +"%Y-%m-%d"
    else
        date -d "+30 days" +"%Y-%m-%d"
    fi
}

# Check if account is expired
check_expiry() {
    local user=$1
    local expiry_date=$(grep "^$user " "$EXPIRY_FILE" | cut -d' ' -f2)

    if [ -z "$expiry_date" ]; then
        echo -e "${YELLOW}No expiry set${NC}"
    elif [ $(date -d "$expiry_date" +%s) -lt $(date +%s) ]; then
        echo -e "${RED}EXPIRED ($expiry_date)${NC}"
    else
        echo -e "${GREEN}Active until $expiry_date${NC}"
    fi
}

# Display user registration info
display_user_info() {
    local user=$1
    local pass=$2
    local expiry=$3
    local ip=$(curl -s ifconfig.me)
    local date=$(date +"%Y-%m-%d %H:%M:%S")
    local expiry_date=$(calculate_expiry "$expiry")

    echo "[$date] User created: $user | IP: $ip | Expiry: $expiry_date" >> "$LOG_FILE"
    echo "$user $expiry_date" >> "$EXPIRY_FILE"

    display_header
    echo -e "${GREEN}USER: $user\nPASS: $pass\nIP: $ip\nEXPIRES: $expiry_date${NC}"
    read -p "Press enter to return..."
}

# Main menu
while true; do
    display_header
    echo -e "${CYAN}1. Create user\n2. Delete user\n3. List users\n4. Check expiry\n5. Restart service\n0. Exit${NC}"
    read -p "Choice: " choice

    case $choice in
        1)
            read -p "Username: " user
            read -s -p "Password: " pass
            echo
            read -p "Expiry (e.g., '7 days', '1 month'): " expiry
            echo -e "$user * $pass *" >> "$CHAP_FILE"
            display_user_info "$user" "$pass" "$expiry"
            ;;
        2)
            read -p "Username to delete: " user
            sed -i "/^$user /d" "$CHAP_FILE"
            sed -i "/^$user /d" "$EXPIRY_FILE"
            echo -e "${GREEN}Deleted user $user${NC}"
            sleep 1
            ;;
        3)
            echo -e "${CYAN}USER LIST:${NC}"
            while read -r line; do
                user=$(echo "$line" | cut -d' ' -f1)
                expiry=$(grep "^$user " "$EXPIRY_FILE" | cut -d' ' -f2)
                status=""
                if [ -z "$expiry" ]; then
                    status="No expiry"
                elif [ $(date -d "$expiry" +%s) -lt $(date +%s) ]; then
                    status="Expired"
                else
                    status="Active"
                fi
                echo -e "$user - $expiry - $status"
            done < "$CHAP_FILE"
            read -p "Press enter to return..."
            ;;
        4)
            read -p "Username: " user
            check_expiry "$user"
            read -p "Press enter to return..."
            ;;
        5)
            systemctl restart accel-ppp
            echo -e "${GREEN}Service restarted${NC}"
            sleep 1
            ;;
        0)
            echo -e "${BLUE}Exiting...${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}Invalid option${NC}"
            sleep 1
            ;;
    esac
done

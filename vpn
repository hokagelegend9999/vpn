#!/bin/bash

# Colors
BLUE='\033[0;38;5;27m'
CYAN='\033[0;38;5;45m'
GREEN='\033[0;38;5;46m'
YELLOW='\033[0;38;5;226m'
RED='\033[0;38;5;196m'
PURPLE='\033[0;38;5;165m'
ORANGE='\033[0;38;5;208m'
NC='\033[0m' # No Color

# SoftEther Configuration
SOFTETHER_DIR="/usr/local/vpnserver"
VPNCMD="$SOFTETHER_DIR/vpncmd"
VPNSERVER="$SOFTETHER_DIR/vpnserver"
CHAP_FILE="/usr/local/vpnserver/vpn_users.conf"
EXPIRY_FILE="/usr/local/vpnserver/user_expiry.conf"
LOG_FILE="/var/log/softether.log"
ADMIN_PASSWORD="Admin123"  # Default admin password from installation

# System Information
ISP=$(curl -s ipinfo.io/org | cut -d '"' -f 4 2>/dev/null || echo "Unknown ISP")
CITY=$(curl -s ipinfo.io/city | cut -d '"' -f 4 2>/dev/null || echo "Unknown City")
IPVPS=$(curl -s ipv4.icanhazip.com || echo "Unknown")
DOMAIN=$(cat /etc/xray/domain 2>/dev/null || hostname -d 2>/dev/null || echo "No domain")
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')
LOADCPU=$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')
OS_INFO=$(source /etc/os-release && echo "$PRETTY_NAME")
CORE=$(nproc)
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(date +'%H:%M:%S')
UPTIME=$(uptime -p | cut -d " " -f 2-)
PUBLIC_IP=$(curl -s ifconfig.me || echo "Unknown")

# Create necessary files if they don't exist
[ -f "$CHAP_FILE" ] || touch "$CHAP_FILE"
[ -f "$EXPIRY_FILE" ] || touch "$EXPIRY_FILE"
[ -f "$LOG_FILE" ] || touch "$LOG_FILE"
chmod 600 "$CHAP_FILE" "$EXPIRY_FILE" "$LOG_FILE"

# Gradient Text
gradient() {
    local text=$1
    local length=${#text}
    local output=""
    for (( i=0; i<length; i++ )); do
        char=${text:$i:1}
        color_code=$(( 27 + (i * 18 / length) ))
        output+="\033[38;5;${color_code}m${char}"
    done
    echo -ne "${output}${NC}"
}

# Check SoftEther Service Status
check_softether_status() {
    if systemctl is-active --quiet vpnserver; then
        echo -e "${GREEN}‚óè RUNNING${NC}"
        
        # Check ports
        echo -e "\n${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ACTIVE PORTS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
        echo -e "${CYAN}‚îÇ ${YELLOW}üîå HTTPS (Admin): $(ss -tuln | grep -q ':443 ' && echo -e "${GREEN}‚úì${NC}" || echo -e "${RED}‚úó${NC}")"
        echo -e "${CYAN}‚îÇ ${YELLOW}üåê OpenVPN: $(ss -tuln | grep -q ':1194 ' && echo -e "${GREEN}‚úì${NC}" || echo -e "${RED}‚úó${NC}")"
        echo -e "${CYAN}‚îÇ ${YELLOW}üõ°Ô∏è L2TP/IPsec: $(ss -tuln | grep -q ':1701 ' && echo -e "${GREEN}‚úì${NC}" || echo -e "${RED}‚úó${NC}")"
        echo -e "${CYAN}‚îÇ ${YELLOW}üîë SSTP: $(ss -tuln | grep -q ':443 ' && echo -e "${GREEN}‚úì${NC}" || echo -e "${RED}‚úó${NC}")"
        echo -e "${CYAN}‚îÇ ${YELLOW}üö™ Admin Console: $(ss -tuln | grep -q ':5555 ' && echo -e "${GREEN}‚úì${NC}" || echo -e "${RED}‚úó${NC}")"
        echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    else
        echo -e "${RED}‚óè STOPPED${NC}"
    fi
}

# Display Header
display_header() {
    clear
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    gradient "                S O F T E T H E R   V P N   M A N A G E R               "
    echo -e "\n${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    
    # System Information Display
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ SYSTEM INFORMATION ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo -e "${CYAN}‚îÇ ${YELLOW}üñ•Ô∏è OS          : ${OS_INFO}"
    echo -e "${CYAN}‚îÇ ${YELLOW}üè¢ ISP         : ${ISP} (${CITY})"
    echo -e "${CYAN}‚îÇ ${YELLOW}üåê IP Address  : ${PUBLIC_IP} (${CITY})"
    echo -e "${CYAN}‚îÇ ${YELLOW}üîå Domain      : ${DOMAIN}"
    echo -e "${CYAN}‚îÇ ${YELLOW}üìÖ Date        : ${DATEVPS} | üïí Time: ${TIMEZONE}"
    echo -e "${CYAN}‚îÇ ${YELLOW}‚è±Ô∏è Uptime      : ${UPTIME}"
    echo -e "${CYAN}‚îÇ ${YELLOW}üíæ RAM Usage   : ${USAGERAM}MB / ${RAM}MB (${MEMOFREE})"
    echo -e "${CYAN}‚îÇ ${YELLOW}‚ö° CPU Load    : ${LOADCPU} | Cores: ${CORE}"
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ VPN SERVICE STATUS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo -e "${CYAN}‚îÇ ${YELLOW}üîå SoftEther VPN : $(check_softether_status)"
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
}

# Calculate expiry
calculate_expiry() {
    local period=$1
    if [[ $period == *"day"* ]]; then
        days=${period%% *}
        date -d "+${days} days" +"%Y-%m-%d"
    elif [[ $period == *"month"* ]]; then
        months=${period%% *}
        date -d "+${months} months" +"%Y-%m-%d"
    elif [[ $period == *"year"* ]]; then
        years=${period%% *}
        date -d "+${years} years" +"%Y-%m-%d"
    else
        date -d "+1 month" +"%Y-%m-%d"
    fi
}

# Create VPN User
create_vpn_user() {
    while true; do
        read -rp "$(echo -e "${BLUE}‚ñ∂ Enter username: ${NC}")" user
        if grep -q "^$user " "$CHAP_FILE"; then
            echo -e "${RED}‚úñ Username already exists!${NC}"
            continue
        fi
        break
    done
    
    read -rsp "$(echo -e "${BLUE}‚ñ∂ Enter password: ${NC}")" pass
    echo
    read -rsp "$(echo -e "${BLUE}‚ñ∂ Confirm password: ${NC}")" pass_confirm
    echo
    
    if [ "$pass" != "$pass_confirm" ]; then
        echo -e "${RED}‚úñ Passwords do not match!${NC}"
        return 1
    fi
    
    while true; do
        read -rp "$(echo -e "${YELLOW}‚ñ∂ Expiry period (e.g. '7 days', '1 month', '1 year'): ${NC}")" expiry
        expiry_date=$(calculate_expiry "$expiry")
        
        echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
        echo -e "${CYAN}‚îÇ ${GREEN}‚úì New VPN Account Details:${NC}"
        echo -e "${CYAN}‚îÇ ${YELLOW}Username: ${GREEN}$user${NC}"
        echo -e "${CYAN}‚îÇ ${YELLOW}Password: ${GREEN}${pass:0:1}*****${pass: -1}${NC}"
        echo -e "${CYAN}‚îÇ ${YELLOW}Expiry Date: ${GREEN}$expiry_date${NC}"
        echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
        
        read -rp "$(echo -e "${YELLOW}‚ñ∂ Confirm creation? [y/N]: ${NC}")" confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            # Create user in SoftEther
            $VPNCMD localhost /SERVER /PASSWORD:$ADMIN_PASSWORD /HUB:DEFAULT /CMD UserCreate $user /GROUP:none /REALNAME:"VPN User" /NOTE:"Created on $(date)"
            $VPNCMD localhost /SERVER /PASSWORD:$ADMIN_PASSWORD /HUB:DEFAULT /CMD UserPasswordSet $user /PASSWORD:$pass
            
            # Store in local files
            echo "$user $pass" >> "$CHAP_FILE"
            echo "$user $expiry_date" >> "$EXPIRY_FILE"
            echo "$(date '+%Y-%m-%d %H:%M:%S') - Created user: $user (Expiry: $expiry_date)" >> "$LOG_FILE"
            echo -e "${GREEN}‚úî User $user created successfully!${NC}"
            return 0
        else
            echo -e "${YELLOW}‚úñ User creation cancelled${NC}"
            return 1
        fi
    done
}

# Delete VPN User
delete_vpn_user() {
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ACTIVE USERS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    printf "%-20s %-20s\n" "Username" "Expiry Date"
    echo "--------------------------------------------------"
    if [ -s "$EXPIRY_FILE" ]; then
        while read -r line; do
            uname=$(echo "$line" | awk '{print $1}')
            exp=$(echo "$line" | awk '{print $2}')
            if [ "$(date -d "$exp" +%s)" -lt "$(date +%s)" ]; then
                printf "${RED}%-20s %-20s (EXPIRED)${NC}\n" "$uname" "$exp"
            else
                printf "%-20s %-20s\n" "$uname" "$exp"
            fi
        done < "$EXPIRY_FILE"
    else
        echo -e "${RED}No users found${NC}"
    fi
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    
    read -rp "$(echo -e "${YELLOW}‚ñ∂ Enter username to delete: ${NC}")" user
    
    if grep -q "^$user " "$CHAP_FILE"; then
        read -rp "$(echo -e "${RED}‚ö† Are you sure you want to delete $user? [y/N]: ${NC}")" confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            # Delete from SoftEther
            $VPNCMD localhost /SERVER /PASSWORD:$ADMIN_PASSWORD /HUB:DEFAULT /CMD UserDelete $user
            
            # Remove from local files
            sed -i "/^$user /d" "$CHAP_FILE"
            sed -i "/^$user /d" "$EXPIRY_FILE"
            echo "$(date '+%Y-%m-%d %H:%M:%S') - Deleted user: $user" >> "$LOG_FILE"
            echo -e "${GREEN}‚úî User $user deleted successfully${NC}"
        else
            echo -e "${YELLOW}‚úñ User deletion cancelled${NC}"
        fi
    else
        echo -e "${RED}‚úñ User $user not found${NC}"
    fi
}

# View All Users
view_all_users() {
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ VPN USERS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    printf "%-20s %-20s %-10s\n" "Username" "Expiry Date" "Status"
    echo "------------------------------------------------------------"
    
    if [ -s "$EXPIRY_FILE" ]; then
        current_date=$(date +%s)
        
        while read -r line; do
            uname=$(echo "$line" | awk '{print $1}')
            exp=$(echo "$line" | awk '{print $2}')
            exp_date=$(date -d "$exp" +%s)
            
            if [ "$exp_date" -lt "$current_date" ]; then
                status="${RED}EXPIRED${NC}"
            else
                days_left=$(( (exp_date - current_date) / 86400 ))
                if [ "$days_left" -le 7 ]; then
                    status="${YELLOW}SOON${NC} (${days_left}d)"
                else
                    status="${GREEN}ACTIVE${NC}"
                fi
            fi
            
            printf "%-20s %-20s %b\n" "$uname" "$exp" "$status"
        done < "$EXPIRY_FILE"
    else
        echo -e "${RED}No VPN users found${NC}"
    fi
    
    total_users=$(wc -l < "$EXPIRY_FILE" 2>/dev/null || echo 0)
    active_users=$(grep -v "EXPIRED" "$EXPIRY_FILE" | wc -l 2>/dev/null || echo 0)
    
    echo -e "${CYAN}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    echo -e "${CYAN}‚îÇ ${YELLOW}Total Users: ${GREEN}$total_users${NC} | ${YELLOW}Active Users: ${GREEN}$active_users${NC}"
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    
    read -rp "$(echo -e "${YELLOW}‚ñ∂ Press Enter to return...${NC}")"
}

# Restart VPN Service
restart_vpn_service() {
    echo -e "${YELLOW}Restarting SoftEther VPN service...${NC}"
    systemctl restart vpnserver
    sleep 2
    
    if systemctl is-active --quiet vpnserver; then
        echo -e "${GREEN}‚úî SoftEther VPN service restarted successfully${NC}"
    else
        echo -e "${RED}‚úñ Failed to restart SoftEther VPN service${NC}"
    fi
    sleep 2
}

# Check VPN Server Status
check_server_status() {
    echo -e "${YELLOW}Checking SoftEther VPN server status...${NC}"
    
    # Check service status
    if systemctl is-active --quiet vpnserver; then
        echo -e "${GREEN}‚óè Service is running${NC}"
    else
        echo -e "${RED}‚óè Service is not running${NC}"
    fi
    
    # Check connection to admin port
    if $VPNCMD localhost /SERVER /PASSWORD:$ADMIN_PASSWORD /CMD About >/dev/null 2>&1; then
        echo -e "${GREEN}‚óè Admin interface is accessible${NC}"
    else
        echo -e "${RED}‚óè Cannot connect to admin interface${NC}"
    fi
    
    # Check active users
    active_users=$($VPNCMD localhost /SERVER /PASSWORD:$ADMIN_PASSWORD /HUB:DEFAULT /CMD SessionList | grep -c "Session Name")
    echo -e "${YELLOW}‚óè Active connections: ${GREEN}$active_users${NC}"
    
    read -rp "$(echo -e "${YELLOW}‚ñ∂ Press Enter to return...${NC}")"
}

# Main Menu
while true; do
    display_header
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ MAIN MENU ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo -e "${CYAN}‚îÇ                                                          ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}1. ${YELLOW}‚ûï Create new VPN user account${NC}                   ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}2. ${YELLOW}‚ûñ Delete VPN user account${NC}                      ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}3. ${YELLOW}üë• View all VPN users${NC}                          ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}4. ${YELLOW}üîÑ Restart VPN service${NC}                         ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}5. ${YELLOW}üìä Check server status${NC}                         ‚îÇ"
    echo -e "${CYAN}‚îÇ ${BLUE}0. ${YELLOW}üö™ Exit${NC}                                       ‚îÇ"
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    
    read -rp "$(echo -e "${YELLOW}‚ñ∂ Select option [0-5]: ${NC}")" choice

    case "$choice" in
        1) create_vpn_user ;;
        2) delete_vpn_user ;;
        3) view_all_users ;;
        4) restart_vpn_service ;;
        5) check_server_status ;;
        0)
            echo -e "${BLUE}üëã Goodbye!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ö† Invalid option! Please select between 0-5.${NC}"
            sleep 1
            ;;
    esac
done
